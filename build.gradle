group 'be.swsb'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE")
        // necessary if you want to run flyway migrations or repairs or ... with the plugin for gradle
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
        classpath 'org.postgresql:postgresql:9.4-1206-jdbc42'
    }

}

dependencies {
    def springVersion = '4.2.3.RELEASE'

    compile("org.springframework:spring-context:$springVersion")

    // Use Jetty instead of default embedded Tomcat
    // No version declared, taken from buildscript dependency
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-jersey") //jax-rs instead of spring-mvc


//    compile("org.springframework:spring-jms")
//    compile("org.apache.activemq:activemq-broker")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.6.1") //to automatically deserialize LocalDateTimes etc.

//    compile("org.springframework.boot:spring-boot-starter-data-jpa")
//    compile("org.flywaydb:flyway-core")
//    compile("org.postgresql:postgresql:9.4-1206-jdbc42")

    testCompile("junit:junit:4.12")
    testCompile("org.assertj:assertj-core:3.2.0")
    testCompile("org.mockito:mockito-core:2.0.31-beta")
    testCompile("org.springframework.boot:spring-boot-starter-test")
//    testCompile("org.skyscreamer:jsonassert:1.2.3")
//    testCompile("org.flywaydb.flyway-test-extensions:flyway-spring-test:3.2.1.1")
}
